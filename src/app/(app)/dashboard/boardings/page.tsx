import type {Metadata} from "next";
import React, {Suspense} from "react";
import {checkAuthenticationAndMembership, getQueryBoardings} from "@/lib/server-utils";
import TablePagination from "@/components/table-pagination";
import BoardingsTable from "@/components/boardings-table";
import {prisma} from "@/lib/prisma";
import BoardingContextProvider from "@/contexts/boarding-context-provider";
import BoardingButton from "@/components/boarding-button";
import EntriesPerPage from "@/components/entries-per-page";
import StatusFilter from "@/components/status-filter";
import {parseSearchParams} from "@/lib/utils";

type PageProps = {
    searchParams: Promise<{
        search?: string;
        page?: string;
    }>
}

export const metadata: Metadata = {
    title: "All Boardings - Pawramid",
    description: "Generated by create next app",
};

export default async function Page({searchParams}: PageProps) {
    const user = await checkAuthenticationAndMembership();

    const searchParamsResults = await searchParams;
    const {status, page, entries} = await parseSearchParams(searchParamsResults);

    const {boardings, totalBoardings, totalPages, currentPage} = await getQueryBoardings({
        status,
        page,
        entries
    });

    const pets = await prisma.pet.findMany({
        where: {
            userId: user.id,
        }
    })

    return (
        <BoardingContextProvider data={boardings} petsData={pets}>
            <div className="flex flex-1 flex-col gap-4 p-4">
                <div className="grid auto-rows-min gap-4 md:grid-cols-2">
                    <div className="flex items-center">
                        <p className="text-xl font-semibold">All Boardings</p>
                    </div>
                    <div className="flex justify-end space-x-3">
                        <StatusFilter pageName="boardings" currentStatus={status}
                                      searchParamsResults={searchParamsResults}/>
                        <BoardingButton actionType="add">Add Boarding</BoardingButton>
                    </div>
                </div>
                <Suspense fallback={<div>Loading boardings...</div>}>
                    <BoardingsTable/>
                </Suspense>
                <div className="flex justify-between space-x-3">
                    <div>
                        <EntriesPerPage pageName="boardings" entries={entries} totalItems={totalBoardings}
                                        searchParamsResults={searchParamsResults}/></div>
                    <div>
                        <TablePagination pageName="boardings" currentPage={currentPage!}
                                         totalPages={totalPages!}
                                         searchParamsResults={searchParamsResults}/>
                    </div>
                </div>
            </div>
        </BoardingContextProvider>
    )
}